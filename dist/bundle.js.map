{"version":3,"file":"bundle.js","mappings":"mBACA,ICA2BA,EAI3BC,QAAQC,KAJmBF,EAIJ,qBAHVG,OAAO,GAAGC,cAAgBJ,EAAIK,MAAM,IAUjDJ,QAAQC,IAAkB,gBAHbI,MAAM,IAAIC,UAAUC,KAAK,KA2B/B,SAASC,EAAaT,EAAKU,GACjC,MAAMC,EAAW,6BACXC,EAAgBC,KAAKC,IAAIJ,GAAc,GAC7C,IAAIK,EAAS,GAEb,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAIiB,OAAQD,IAAK,CACpC,IAAIE,EAAOlB,EAAIgB,GACXG,EAAQR,EAASS,QAAQF,EAAKd,eAGlC,IAAe,IAAXe,EAAc,CAChBJ,GAAUG,EACV,QACF,CAEA,IACIG,EAAcV,EAASR,QADPgB,EAAQP,GAAiB,IAIzCM,IAASA,EAAKI,cAChBP,GAAUM,EAAYC,cAEtBP,GAAUM,CAEb,CAEA,OAAON,CACR,CAMA,SAASQ,EAAaC,GACpB,GAAIC,MAAMC,QAAQF,GAAM,CACtB,IAAIG,EAAM,EACNC,EAAMC,IACNC,GAAM,IAGV,IAAK,IAAId,EAAI,EAAGA,EAAIQ,EAAIP,OAAQD,IAC9BW,GAAOH,EAAIR,GACPQ,EAAIR,GAAKY,IAAKA,EAAMJ,EAAIR,IACxBQ,EAAIR,GAAKc,IAAKA,EAAMN,EAAIR,IAK9B,MAAO,CACLe,QAHcJ,EAAMH,EAAIP,OAIxBW,IAAKA,EACLE,IAAKA,EACLb,OAAQO,EAAIP,OAEhB,CACF,CA7DAhB,QAAQC,IAAmB,EAAG,GAC9BD,QAAQC,IAZI,EAAC8B,EAAGC,IACLD,EAAIC,EAWHC,CAAoB,EAAG,IACnCjC,QAAQC,IAVE,EAAC8B,EAAGC,IACHD,EAAIC,EASHC,CAAkB,EAAG,IACjCjC,QAAQC,IARI,EAAC8B,EAAGC,IACLD,EAAIC,EAOHC,CAAoB,EAAG,IAgCnCjC,QAAQC,IAAIO,EAAa,SAAU,IACnCR,QAAQC,IAAIO,EAAa,oBAAqB,KA4B9CR,QAAQC,IAAIqB,EAAa,CAAC,EAAG,EAAG,KAChCtB,QAAQC,IAAIqB,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KACzCtB,QAAQC,IAAIqB,EAAa,EAAE,IAAK,GAAI,K","sources":["webpack://repository-template/webpack/bootstrap","webpack://repository-template/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","//\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nconsole.log(capitalize(\"what's your name?\"));\n\n//\nexport function reverseString(str) {\n  return str.split(\"\").reverse().join(\"\");\n}\n\nconsole.log(reverseString(\"Hello Carson!\"));\n\n//\nexport let calculator = {\n  add: (a, b) => {\n    return a + b;\n  },\n  subtract: (a, b) => {\n    return a - b;\n  },\n  divide: (a, b) => {\n    return a / b;\n  },\n  multiply: (a, b) => {\n    return a * b;\n  },\n};\n\nconsole.log(calculator.add(3, 5));\nconsole.log(calculator.subtract(3, 5));\nconsole.log(calculator.divide(3, 5));\nconsole.log(calculator.multiply(3, 5));\n\n//\nexport function caesarCipher(str, shiftIndex) {\n const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXZY\";\n const positiveShift = Math.abs(shiftIndex) % 26;\n let cipher = \"\";\n\n for (let i = 0; i < str.length; i++) {\n  let char = str[i];\n  let index = alphabet.indexOf(char.toUpperCase());\n\n  // If character is not in the alphabet, keep it unchanged\n  if (index === -1) {\n    cipher += char;\n    continue;\n  }\n\n  let shiftedIndex = (index + positiveShift) % 26;\n  let shiftedChar = alphabet.charAt(shiftedIndex);\n\n  // Preserve the case of the original character\n  if (char === char.toLowerCase()) {\n    cipher += shiftedChar.toLowerCase();\n  } else {\n    cipher += shiftedChar;\n  }\n }\n\n return cipher;\n}\n\nconsole.log(caesarCipher(\"Bang!\", -5));\nconsole.log(caesarCipher(\"What's your name?\", 15));\n\n// \nfunction analyzeArray(arr) {\n  if (Array.isArray(arr)) {\n    let sum = 0;\n    let min = Infinity;\n    let max = -Infinity;\n\n    // Average Calculation, Minimum, Maximum\n    for (let i = 0; i < arr.length; i++) {\n      sum += arr[i];\n      if (arr[i] < min) min = arr[i];\n      if (arr[i] > max) max = arr[i];\n    }\n\n    const average = sum / arr.length;\n\n    return {\n      average: average,\n      min: min,\n      max: max,\n      length: arr.length\n    };\n  }\n}\n\n\nconsole.log(analyzeArray([3, 6, 9]));\nconsole.log(analyzeArray([1, 2, 3, 4, 5, 6]));\nconsole.log(analyzeArray([-50, -20, 10]));"],"names":["str","console","log","charAt","toUpperCase","slice","split","reverse","join","caesarCipher","shiftIndex","alphabet","positiveShift","Math","abs","cipher","i","length","char","index","indexOf","shiftedChar","toLowerCase","analyzeArray","arr","Array","isArray","sum","min","Infinity","max","average","a","b","calculator"],"sourceRoot":""}
{"version":3,"file":"bundle.js","mappings":"mBACA,ICA2BA,EAI3BC,QAAQC,KAJmBF,EAIJ,SAHVG,OAAO,GAAGC,cAAgBJ,EAAIK,MAAM,IAUjDJ,QAAQC,IAAkB,gBAHbI,MAAM,IAAIC,UAAUC,KAAK,KAqBtCP,QAAQC,IAAmB,EAAG,GAC9BD,QAAQC,IAZI,EAACO,EAAGC,IACLD,EAAIC,EAWHC,CAAoB,EAAG,IACnCV,QAAQC,IAVE,EAACO,EAAGC,IACHD,EAAIC,EASHC,CAAkB,EAAG,IACjCV,QAAQC,IARI,EAACO,EAAGC,IACLD,EAAIC,EAOHC,CAAoB,EAAG,IAgCnCV,QAAQC,IA7BD,SAAsBF,EAAKY,GACjC,MAAMC,EAAW,6BAEjB,IAAIC,EAAS,GAEb,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAYe,IAAK,CACpC,IAAIC,EAAOhB,EAAIe,GACXE,EAAQJ,EAASK,QAAQF,EAAKZ,eAGlC,IAAe,IAAXa,EAAc,CAChBH,GAAUE,EACV,QACF,CAEA,IACIG,EAAcN,EAASV,QADPc,EAbCL,GAawB,IAIzCI,IAASA,EAAKI,cAChBN,GAAUK,EAAYC,cAEtBN,GAAUK,CAEb,CAEA,OAAOL,CACR,CAEYO,CAAa,S","sources":["webpack://repository-template/webpack/bootstrap","webpack://repository-template/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","//\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nconsole.log(capitalize(\"hello\"));\n\n//\nexport function reverseString(str) {\n  return str.split(\"\").reverse().join(\"\");\n}\n\nconsole.log(reverseString(\"Hello Carson!\"));\n\n//\nexport let calculator = {\n  add: (a, b) => {\n    return a + b;\n  },\n  subtract: (a, b) => {\n    return a - b;\n  },\n  divide: (a, b) => {\n    return a / b;\n  },\n  multiply: (a, b) => {\n    return a * b;\n  },\n};\n\nconsole.log(calculator.add(3, 5));\nconsole.log(calculator.subtract(3, 5));\nconsole.log(calculator.divide(3, 5));\nconsole.log(calculator.multiply(3, 5));\n\n//\nexport function caesarCipher(str, shiftIndex) {\n const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXZY\";\n const positiveShift = shiftIndex % 26;\n let cipher = \"\";\n\n for (let i = 0; i < str.length; i++) {\n  let char = str[i];\n  let index = alphabet.indexOf(char.toUpperCase());\n\n  // If character is not in the alphabet, keep it unchanged\n  if (index === -1) {\n    cipher += char;\n    continue;\n  }\n\n  let shiftedIndex = (index + positiveShift) % 26;\n  let shiftedChar = alphabet.charAt(shiftedIndex);\n\n  // Preserve the case of the original character\n  if (char === char.toLowerCase()) {\n    cipher += shiftedChar.toLowerCase();\n  } else {\n    cipher += shiftedChar;\n  }\n }\n\n return cipher;\n}\n\nconsole.log(caesarCipher(\"HELLO\", 3));\n\n\n"],"names":["str","console","log","charAt","toUpperCase","slice","split","reverse","join","a","b","calculator","shiftIndex","alphabet","cipher","i","char","index","indexOf","shiftedChar","toLowerCase","caesarCipher"],"sourceRoot":""}